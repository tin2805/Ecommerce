<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>RedStore | Ecommerce Website Design</title>
    <link rel="stylesheet" href="/css/app.css">
    <link rel="stylesheet" href="/css/style.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap"
        rel="stylesheet">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="https://kit.fontawesome.com/5fd473b11d.js" crossorigin="anonymous"></script>

</head>
    <div class="app">
        {{>header}}

        {{{body}}}

        {{>footer}}
    </div>
    <div class="notification">
        <div class="notification__message message--info">
            <h1>Info</h1>
            <p>Lorem ipsum dolor sit amet consectetur adipisicing.</p>

            <!-- x icon through a path element -->
            <button aria-labelledby="button-dismiss">
                <span id="button-dismiss" hidden>Dismiss</span>
                <svg viewBox="0 0 100 100" width="10" height="10">
                    <!-- group to style the path -->
                    <g
                        stroke="currentColor"
                        stroke-width="6"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        fill="none">
                        <!-- group to center and rotate the + sign to show an x sign instead -->
                        <g transform="translate(50 50) rotate(45)">
                            <!-- path describing two perpendicular lines -->
                            <path
                                d="M 0 -30 v 60 z M -30 0 h 60">
                            </path>
                        </g>
                    </g>
                </svg>
            </button>
        </div>
    </div>
</body>
</html>
<script>
    // utility function returning a random item from the input array
    const randomItem = arr => arr[Math.floor(Math.random() * arr.length)];

    // possible values for the message title and modifier
    const messageTitle = [
    'info',
    'success',
    'warning',
    'danger',
    ];

    // possible values for the body of the message
    // end result of the emmet shortcut p*10>lorem10
    const messageText = [
    '{{notification.text}}'
    ];

    /* logic
    - create a message
    - show the message
    - allow to dismiss the message through the dismiss button

    once the message is dismissed the idea is to go through the loop one more time, with a different title and text values
    */
    const notification = document.querySelector('.notification');

    // function called when the button to dismiss the message is clicked
    function dismissMessage() {
    // remove the .received class from the .notification widget
    notification.classList.remove('received');

    // call the generateMessage function to show another message after a brief delay
    //generateMessage();
    }

    // function showing the message
    function showMessage() {
    // add a class of .received to the .notification container
    notification.classList.add('received');

    // attach an event listener on the button to dismiss the message
    // include the once flag to have the button register the click only one time
    const button = document.querySelector('.notification__message button');
    button.addEventListener('click', dismissMessage, { once: true });
    }

    // function generating a message with a random title and text
    function generateMessage() {
        // after an arbitrary and brief delay create the message and call the function to show the element
        const delay = Math.floor(Math.random() * 1000) + 500;
        const timeoutID = setTimeout(() => {


            // update the message with the random values and changing the class name to the title's option
            const message = document.querySelector('.notification__message');

            message.querySelector('h1').textContent = '{{notification.type}}';
            message.querySelector('p').textContent = '{{notification.text}}';
            message.className = `notification__message message--${'{{notification.type}}'}`;

            // call the function to show the message
            showMessage();
            clearTimeout(timeoutID);
            
        }, delay);
        setTimeout(() => {
            notification.classList.remove('received');
        }, delay + 5000);

    }


    // immediately call the generateMessage function to kickstart the loop
    if('{{notification}}'){
        generateMessage();
    }

    
</script>
 <!-- ------------------- js for toggle menu-------------- -->
<script>
    var MenuItems = document.getElementById("MenuItems");

    //MenuItems.style.maxHeight = "0px";

    function menutoggle() {
        if (MenuItems.style.maxHeight == "0px") {
            MenuItems.style.maxHeight = "200px";
        }
        else {
            MenuItems.style.maxHeight = "0px";
        }
    }

</script>
